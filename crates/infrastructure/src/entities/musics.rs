//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "musics")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub title: String,
    pub artist: String,
    #[sea_orm(column_type = "Decimal(Some((6, 3)))")]
    pub bpm: Decimal,
    pub genre: i32,
    pub jacket: String,
    pub registration_date: DateTimeWithTimeZone,
    pub is_test: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::sheets::Entity")]
    Sheets,
}

impl Related<super::sheets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Sheets.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
